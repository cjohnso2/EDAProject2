construct(rgb())
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"),alpha= .5)
p3
p3(5)
plot(x, y, pch =19, col= rgb(0,.5,.5))
plot(x, y, pch =19, col= rgb(0,.5,.5, .3))
brewer.pal(3, "BuGn")
ols <- brewer.pal(3, "BuGn")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(p1(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ ~ hwy, data = mpg)
qplot(displ,hwy, data = mpg)
qplot(displ,hwy, data = mpg, color = drv)
qplot(displ,hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(, hwy, data = mpg, color= drv)
myhigh
qplot(drv, hwy, data = mpg, goem_set = "boxplot")
qplot(drv, hwy, data = mpg, goem = "boxplot")
qplot(drv, hwy, data = mpg, geom =  = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~ . ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point, "smooth), facet= .~drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facet= .~drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
g<- ggplot(mpg, aes(displ, hwy))
summary(g)
g+ geom_point()
g+ geom_point()+ geom_smooth()
g+ geom_point()+ geom_smooth(method = "lm")
g+ geom_point()+ geom_smooth(method = "lm")+ facet_grid(,~drv)
g+ geom_point()+ geom_smooth(method = "lm")+facet_grid(.~drv)
g+ geom_point()+ geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("swirl rules")
g+ geom_point()+ geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color= "pink", size = 4, alpha = .5)
g+geom_point(size = 4, alpha = .5, aes(drv))
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv))+ labs(title = "Swirl Rules!")+ labs(xlab= "Displacement", ylab= "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement") y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = .5) + geom_smooth(size =4, linetyoe =3, method = "lm", se= FALSE)
g + geom_point(aes(color = drv), size = 2, alpha = .5) + geom_smooth(size =4, linetype =3, method = "lm", se= FALSE)
g + geom_point(aes(color= drv)) + theme_bw(base_family = "Times")
ggplot(myx, myy, type= l", ylim= c(-3,3),  type="l")
qplot(myx, myy, type= l", ylim= c(-3,3),  type="l")
ggplot(myx, myy,  type="l", ylim= c(-3,3),  type="l")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line(ylim(c(-3,3)))
g + geom_line(aes(ylim(c(-3,3))))
g + geom_line(ylim = c(-3,3))
g + geom_line() + aes(ylim = c(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE) + geom_smooth(method method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
rm(list = ls())
library(swirl)
swirl()
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints); stageVariable("diamonds$car2",diamonds$car2)
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
rm(list=ls())
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2movies)
qplot(votes, rating, data = movies)
install.packages("ggplot2movies")
rm(list=ls())
library(swirl)
swirl()
install.packages("fields")
library()
install.packages("fields")
install.packages("fields")
library()
install.packages("fields")
install.packages("spam")
library()
install.packages("spam")
library()
install.packages("spam")
install.packages("spam")
install.packages("spam")
library()
install.packages("spam")
install.packages("spam")
library()
install.packages("fields")
library()
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
hc
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col= "blue")
abline(h = 4, col= "red")
abline(h=.4,col="red")
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix, Colv = cm.colors(25))
heatmap(data= dataMatrix, Colv = cm.colors(25))
heatmap(dataMatrix, Col = cm.colors(25))
heatmap(dataMatrix, Col = cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt
)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
omnitest(correctExpr='svd1$d')
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library()
library(swirl)
swirl()
dim(sad)
dim(s&d)
dim(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y,]
library()
rm(list=ls())
install.packages("XLConnect")
library()
install.packages("XLConnect")
library()
getwd
getwd()
homedir <- setwd("/cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents")
homedir <- setwd("/cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents")
setwd(cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents)
homedir <- setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents")
library(rjava)
library(XLConnect)
setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Desktop/Externl CC")
data.files = list.files()
df = readWorksheetFromFile(file=data.files[1], sheet=2)
for (file in data.files[-1]) {
newFile = readWorksheetFromFile(file=file, sheet=2)
df = merge(df, newFile, all=TRUE)
}
install.packages("gdata")
library(gdata)
install.packages("gdata")
library(gdata)
install.packages("gdata")
library(gdata)
install.packages("gdata")
library(gdata)
install.packages("gdata")
library(gdata)
install.packages("gdata")
install.packages("gdata")
install.packages("gdata")
install.packages("gdata")
install.packages("gdata")
install.packages("gdata")
install.packages("gdata")
install.packages("gdata")
install.packages("gdata")
library(gdata)
install.packages("gdata")
library(gdata)
install.packages("gdata")
library(xlxs)
library()
library(xlsx)
homedir
getwd()
setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents")
getwd()
rm(homedir)
homedir<- setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents")
library(gdata)
setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Desktop/Externl CC")
data.files = list.files(pattern = "*.xlsx") #get list of files
getwd()
homedir
getwd()
setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents")
getwd()
library(rjava)
library(XLConnect)
setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Desktop/Externl CC")
data.files = list.files()
df = readWorksheetFromFile(file=data.files[1], sheet=2)
library()
install.packages("rjava")
n
library(rJava)
library(XLConnect)
install.packages("openxlsx")
install.packages("openxlsx")
install.packages("openxlsx")
install.packages("openxlsx")
library("openxlsx")
mydf <- read.xlsx("external_cc_101016.xlsx", sheet = 2, startRow = 2, colNames = TRUE)
head(MYDF)
head(Mmydf)
View(mydf)
mydf <- read.xlsx("external_cc_101016.xlsx", sheet = 2, startRow = 1, colNames = TRUE)
head(mydf)
mydf <- read.xlsx(file=[1], sheet = 2, startRow = 1, colNames = TRUE)
mydf <- read.xlsx(file={1}, sheet = 2, startRow = 1, colNames = TRUE)
data.files
mydf <- read.xlsx(data.files[1], sheet = 2, startRow = 1, colNames = TRUE)
for (file in data.files[-1]) {
newFile = readWorksheetFromFile(file=file, sheet=2)
mydf = merge(mydf, newFile, all=TRUE)
}
for (file in data.files[-1]) {
newFile = read.xlsx(file=file, sheet=2)
mydf = merge(mydf, newFile, all=TRUE)
}
for (file in data.files[-1]) {
newFile = read.xlsx(file=data.files, sheet=2)
mydf = merge(mydf, newFile, all=TRUE)
}
for (file in data.files[-1]) {
newFile = read.xlsx(data.files[1]+1, sheet=2)
mydf = merge(mydf, newFile, all=TRUE)
}
mydf1 <- read.xlsx(data.files[2], sheet = 2, startRow = 1, colNames = TRUE)
mydf2 <- read.xlsx(data.files[3], sheet = 2, startRow = 1, colNames = TRUE)
mydf3 <- read.xlsx(data.files[4], sheet = 2, startRow = 1, colNames = TRUE)
mydf4 <- read.xlsx(data.files[5], sheet = 2, startRow = 1, colNames = TRUE)
mydf5 <- read.xlsx(data.files[6], sheet = 2, startRow = 1, colNames = TRUE)
mydf6 <- read.xlsx(data.files[7], sheet = 2, startRow = 1, colNames = TRUE)
new.file <- merge.data.frame(mydf, mydf1, mydf2, mydf3, mydf4, mydf5, mydf6, all = TRUE)
head(mydf6)
merge(mydf, mydf1, all = TRUE)
merge.data.frame(mydf, mydf1, all = TRUE)
new.file <- merge.data.frame(mydf, mydf1, mydf2, mydf3, mydf4, mydf5, mydf6, all = TRUE, by = colnames(mydf))
library(xlsx)
rm(list=ls())
getwd()
setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents")
fetwd()
getwd()
#Set working directory
setwd("\\\\cscphome/HOME1/CJOHNSO2/Redir-cjohnso2/Documents/EDA week 4 Project")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
total.emissions <- aggregate(Emissions ~ year, NEI, sum)
png('plot1.png')
barplot(height=total.emissions$Emissions, names.arg=total.emissions$year,
xlab="years", ylab=expression('total PM'[2]*' emission'),
main=expression('Total PM'[2]*' emissions at various years'))
dev.off()
Baltimore.emissions <- NEI[NEI$fips=="24510",]
Baltimore.emissions.by.year <- aggregate(Emissions ~ year, Baltimore.emissions, sum)
png('plot2.png')
barplot(height=Baltimore.emissions.by.year$Emissions,
names.arg=Baltimore.emissions.by.year$year,
xlab="years", ylab=expression('total PM'[2]*' emission'),
main=expression('Total PM'[2]*' emissions in Baltimore City, '*
'Maryland at various years'))
dev.off()
library(ggplot2)
png("plot3.png", height=480, width=680)
ggplot(Baltimore.emissions.aggr, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type) +
xlab("year") +
ylab(expression("total PM"[2.5]*" emission")) +
ggtitle(expression("PM"[2.5]*paste(" emissions in Baltimore ",
"City by various source types", sep="")))
dev.off()
Baltimore.emissions.aggr <- aggregate(Emissions ~ year + type,
data=Baltimore.emissions,
FUN=sum)
png("plot3.png", height=480, width=680)
ggplot(Baltimore.emissions.aggr, aes(x=factor(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
facet_grid(. ~ type) +
xlab("year") +
ylab(expression("total PM"[2.5]*" emission")) +
ggtitle(expression("PM"[2.5]*paste(" emissions in Baltimore ",
"City by various source types", sep="")))
dev.off()
is.combustion.coal <- grepl("Fuel Comb.*Coal", SCC$EI.Sector)
combustion.coal.sources <- SCC[is.combustion.coal,]
head(combustion.coal.sources)
emissions <- NEI[(NEI$SCC %in% combustion.coal.sources$SCC), ]
emissions.by.year <- aggregate(Emissions ~ year, data=emissions, FUN=sum)
library(ggplot2)
png("plot4.png")
ggplot(emissions.by.year, aes(x=factor(year), y=Emissions)) +
geom_bar(stat="identity") +
xlab("year") +
ylab(expression("total PM"[2.5]*" emissions")) +
ggtitle("Emissions from coal combustion-related sources")
dev.off()
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips==24510,]
png("plot5.png")
ggplot(baltimoreVehiclesNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
dev.off()
vehiclesBaltimoreNEI <- vehiclesNEI[vehiclesNEI$fips == 24510,]
vehiclesBaltimoreNEI$city <- "Baltimore City"
vehiclesLANEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
vehiclesLANEI$city <- "Los Angeles County"
bothNEI <- rbind(vehiclesBaltimoreNEI,vehiclesLANEI)
png("plot6.png")
ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
dev.off()
